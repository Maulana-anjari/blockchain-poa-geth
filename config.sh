#!/bin/bash
# File: config.sh
# Internal technical configuration for the dynamic blockchain network.
# This script reads high-level settings from the .env file and sets up
# derived variables and constants for other scripts to use.
#
# DO NOT EDIT THIS FILE MANUALLY. Use the .env file for configuration.

# --- Environment Loading ---
# Load environment variables from .env file if it exists.
if [ -f .env ]; then
    set -a
    source .env
    set +a
fi

# --- Helper Functions ---
trim_whitespace() {
  # shellcheck disable=SC2001
  echo "$1" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
}

parse_labels_to_array() {
  local raw="$1"
  local -n target_array=$2
  target_array=()
  if [ -z "$raw" ]; then
    return
  fi
  IFS=',' read -ra __tmp_labels <<< "$raw"
  for label in "${__tmp_labels[@]}"; do
    local trimmed
    trimmed=$(trim_whitespace "$label")
    if [ -n "$trimmed" ]; then
      target_array+=("$trimmed")
    fi
  done
}

slugify_label() {
  echo "$1" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9]+/-/g' | sed -E 's/^-+|-+$//g'
}

get_array_label() {
  local -n arr=$1
  local index=$2
  local fallback=$3
  if [ ${#arr[@]} -ge "$index" ]; then
    echo "${arr[$((index-1))]}"
  else
    echo "$fallback"
  fi
}

get_poa_signer_label() {
  local idx=$1
  local fallback="Signer${idx}"
  get_array_label POA_SIGNER_LABELS_ARRAY "$idx" "$fallback"
}

get_poa_nonsigner_label() {
  local idx=$1
  local fallback="NonSigner${idx}"
  get_array_label POA_NONSIGNER_LABELS_ARRAY "$idx" "$fallback"
}

# --- Label Arrays ---
declare -a POA_SIGNER_LABELS_ARRAY=()
declare -a POA_NONSIGNER_LABELS_ARRAY=()

parse_labels_to_array "${POA_SIGNER_LABELS:-}" POA_SIGNER_LABELS_ARRAY
parse_labels_to_array "${POA_NONSIGNER_LABELS:-}" POA_NONSIGNER_LABELS_ARRAY

# --- Dynamic Node Count Configuration ---
# Set the number of nodes based on the active NETWORK_TYPE.
if [ "$NETWORK_TYPE" == "PoA" ]; then
  export NUM_SIGNERS=${POA_SIGNER_COUNT:-3}
  export NUM_NONSIGNERS=${POA_NON_SIGNER_COUNT:-1}
elif [ "$NETWORK_TYPE" == "PoS" ]; then
  export NUM_VALIDATORS=${POS_VALIDATOR_COUNT:-3}
  export NUM_NON_VALIDATORS=${POS_NON_VALIDATOR_COUNT:-1}
  export NUM_NODES=$((NUM_VALIDATORS + NUM_NON_VALIDATORS))
fi


# --- Network & Secrets Configuration ---
export NETWORK_ID=${NETWORK_ID:-477748}
export COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-"blockchain_sut"}

# Passwords and prefixes are now primarily controlled from .env
export SIGNER_PASS_PREFIX=${SIGNER_PASS_PREFIX:-"pass_signer_"}
export NONSIGNER_PASS_PREFIX=${NONSIGNER_PASS_PREFIX:-"pass_nonsigner_"}

# Secrets for monitoring services and databases.
export ETHSTATS_WS_SECRET=${ETHSTATS_WS_SECRET:-"YourSuperSecretEthstatsStringHere"}
export INFLUXDB_DB=${INFLUXDB_DB:-"geth_metrics"}
export INFLUXDB_USER=${INFLUXDB_USER:-"geth_user"}
export INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD:-"YourStrongInfluxDBPassword"}
export GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-"YourStrongGrafanaAdminPassword"}

# --- Port Mapping Configuration ---
export BASE_GETH_P2P_PORT=${BASE_GETH_P2P_PORT:-30303}
export BASE_GETH_HTTP_PORT=${BASE_GETH_HTTP_PORT:-8545}
export BASE_GETH_WS_PORT=${BASE_GETH_WS_PORT:-8546}
export BASE_MONITORING_HTTP_PORT=${BASE_MONITORING_HTTP_PORT:-8085}
export BASE_GRAFANA_HTTP_PORT=${BASE_GRAFANA_HTTP_PORT:-3000}

# --- Directory and Path Configuration ---
export DATA_DIR="./data"
export CONFIG_DIR="./config"
export SCRIPTS_DIR="./scripts"
export GENESIS_FILE="${CONFIG_DIR}/genesis.json"
